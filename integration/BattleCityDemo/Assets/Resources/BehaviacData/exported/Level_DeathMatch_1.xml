<?xml version="1.0" encoding="utf-8"?>
<!--EXPORTED BY TOOL, DON'T MODIFY IT!-->
<!--Source File: Level_DeathMatch_1.xml-->
<behavior name="Level_DeathMatch_1" agenttype="GameLevelCommon" version="1">
  <pars>
    <par name="parT_PlayerIDs" type="vector&lt;int&gt;" value="4:10|11|12|13" />
    <par name="parT_ID" type="int" value="0" />
    <par name="parT_Life" type="int" value="0" />
    <par name="parT_PlayerIndex" type="int" value="0" />
    <par name="parT_LifeCounts" type="vector&lt;int&gt;" value="4:1|1|1|1" />
    <par name="parT_EnemyCount" type="int" value="0" />
    <par name="parT_AwardX" type="int" value="0" />
    <par name="parT_AwardY" type="int" value="0" />
    <par name="parT_AwardType" type="int" value="0" />
    <par name="parT_ForceColors" type="vector&lt;UnityEngine::Color&gt;" value="4:{a=1;b=0;g=0;r=1;}|{a=1;b=1;g=0;r=0;}|{a=1;b=0;g=1;r=1;}|{a=1;b=0;g=1;r=0;}" />
    <par name="parT_Forces" type="vector&lt;eGameForce&gt;" value="4:BLUE_FORCE|BLUE_FORCE|BLUE_FORCE|RED_FORCE" />
    <par name="parT_ActorForce" type="eGameForce" value="BLUE_FORCE" />
    <par name="parT_ActorColor" type="UnityEngine::Color" value="{a=0;b=0;g=0;r=0;}" />
    <par name="parT_RedForceID" type="int" value="0" />
    <par name="parT_ActorCount" type="int" value="4" />
    <par name="parT_BehaviorTree" type="vector&lt;string&gt;" value="4:&quot;Tank_SafeWander_RandomFire&quot;|&quot;Tank_SafeWander_RandomFire&quot;|&quot;Tank_SafeWander_RandomFire&quot;|&quot;Tank_Agressive&quot;" />
    <par name="parT_Tree" type="string" value="" />
  </pars>
  <node class="Selector" version="1" id="3">
    <node class="DecoratorLoopUntil" version="1" id="10">
      <property Count="const int -1" />
      <property DecorateWhenChildEnds="true" />
      <property Until="false" />
      <node class="Sequence" version="1" id="17">
        <node class="Condition" version="1" id="4">
          <property Operator="Less" />
          <property Opl="int parT_PlayerIndex" />
          <property Opr="int parT_ActorCount" />
        </node>
        <node class="Assignment" version="1" id="12">
          <property Opl="int parT_ID" />
          <property Opr="Self.GameLevelCommon::getIntArrayElement(vector&lt;int&gt; parT_PlayerIDs,int parT_PlayerIndex)" />
        </node>
        <node class="Assignment" version="1" id="13">
          <property Opl="int parT_Life" />
          <property Opr="Self.GameLevelCommon::getIntArrayElement(vector&lt;int&gt; parT_LifeCounts,int parT_PlayerIndex)" />
        </node>
        <node class="Action" version="1" id="15">
          <property Method="Self.GameLevelCommon::setActorLifeCount(int parT_ID,int parT_Life)" />
          <property PreconditionFailResult="BT_FAILURE" />
          <property ResultOption="BT_SUCCESS" />
        </node>
        <node class="Assignment" version="1" id="51">
          <property Opl="eGameForce parT_ActorForce" />
          <property Opr="Self.GameLevelCommon::getGameForceArrayElement(vector&lt;eGameForce&gt; parT_Forces,int parT_PlayerIndex)" />
        </node>
        <node class="DecoratorAlwaysSuccess" version="1" id="53">
          <property DecorateWhenChildEnds="false" />
          <node class="Sequence" version="1" id="54">
            <node class="Condition" version="1" id="52">
              <property Operator="Equal" />
              <property Opl="eGameForce parT_ActorForce" />
              <property Opr="const eGameForce RED_FORCE" />
            </node>
            <node class="Assignment" version="1" id="55">
              <property Opl="int parT_RedForceID" />
              <property Opr="int parT_ID" />
            </node>
            <node class="Action" version="1" id="26">
              <property Method="Self.GameLevelCommon::setMainCharID(int parT_RedForceID)" />
              <property PreconditionFailResult="BT_FAILURE" />
              <property ResultOption="BT_SUCCESS" />
            </node>
          </node>
        </node>
        <node class="Compute" version="1" id="16">
          <property Operator="Add" />
          <property Opl="int parT_PlayerIndex" />
          <property Opr1="int parT_PlayerIndex" />
          <property Opr2="const int 1" />
        </node>
      </node>
    </node>
    <node class="Sequence" version="1" id="6">
      <node class="Wait" version="1" id="47">
        <property IgnoreTimeScale="false" />
        <property Time="const int 2000" />
      </node>
      <node class="DecoratorLoop" version="1" id="50">
        <property Count="const int -1" />
        <property DecorateWhenChildEnds="true" />
        <node class="Parallel" version="1" id="14">
          <property ChildFinishPolicy="CHILDFINISH_LOOP" />
          <property ExitPolicy="EXIT_ABORT_RUNNINGSIBLINGS" />
          <property FailurePolicy="FAIL_ON_ALL" />
          <property SuccessPolicy="SUCCEED_ON_ALL" />
          <node class="Sequence" version="1" id="11">
            <node class="DecoratorAlwaysSuccess" version="1" id="18">
              <property DecorateWhenChildEnds="false" />
              <node class="Sequence" version="1" id="8">
                <node class="Condition" version="1" id="9">
                  <property Operator="Equal" />
                  <property Opl="int parT_PlayerIndex" />
                  <property Opr="int parT_ActorCount" />
                </node>
                <node class="Assignment" version="1" id="19">
                  <property Opl="int parT_PlayerIndex" />
                  <property Opr="const int 0" />
                </node>
              </node>
            </node>
            <node class="Assignment" version="1" id="20">
              <property Opl="int parT_ID" />
              <property Opr="Self.GameLevelCommon::getIntArrayElement(vector&lt;int&gt; parT_PlayerIDs,int parT_PlayerIndex)" />
            </node>
            <node class="DecoratorAlwaysSuccess" version="1" id="21">
              <property DecorateWhenChildEnds="false" />
              <node class="Sequence" version="1" id="29">
                <node class="DecoratorNot" version="1" id="36">
                  <property DecorateWhenChildEnds="false" />
                  <node class="Action" version="1" id="7">
                    <property Method="Self.GameLevelCommon::isActorAlive(int parT_ID)" />
                    <property PreconditionFailResult="BT_FAILURE" />
                    <property ResultOption="BT_INVALID" />
                  </node>
                </node>
                <node class="Assignment" version="1" id="39">
                  <property Opl="int parT_Life" />
                  <property Opr="Self.GameLevelCommon::getActorLifeCount(int parT_ID)" />
                </node>
                <node class="Condition" version="1" id="37">
                  <property Operator="Greater" />
                  <property Opl="int parT_Life" />
                  <property Opr="const int 0" />
                </node>
                <node class="Assignment" version="1" id="40">
                  <property Opl="eGameForce parT_ActorForce" />
                  <property Opr="Self.GameLevelCommon::getGameForceArrayElement(vector&lt;eGameForce&gt; parT_Forces,int parT_PlayerIndex)" />
                </node>
                <node class="Assignment" version="1" id="48">
                  <property Opl="UnityEngine::Color parT_ActorColor" />
                  <property Opr="Self.GameLevelCommon::getColorArrayElement(vector&lt;UnityEngine::Color&gt; parT_ForceColors,int parT_PlayerIndex)" />
                </node>
                <node class="Assignment" version="1" id="25">
                  <property Opl="string parT_Tree" />
                  <property Opr="Self.GameLevelCommon::getStringArrayElement(vector&lt;string&gt; parT_BehaviorTree,int parT_PlayerIndex)" />
                </node>
                <node class="Action" version="1" id="49">
                  <property Method="Self.GameLevelCommon::spawnGameActor(eGameForce parT_ActorForce,10,string parT_Tree,1500,500,1,3,180,360,int parT_PlayerIndex,UnityEngine::Color parT_ActorColor,int parT_ID)" />
                  <property PreconditionFailResult="BT_FAILURE" />
                  <property ResultOption="BT_SUCCESS" />
                </node>
                <node class="Compute" version="1" id="41">
                  <property Operator="Sub" />
                  <property Opl="int parT_Life" />
                  <property Opr1="int parT_Life" />
                  <property Opr2="const int 1" />
                </node>
                <node class="Action" version="1" id="35">
                  <property Method="Self.GameLevelCommon::setActorLifeCount(int parT_ID,int parT_Life)" />
                  <property PreconditionFailResult="BT_FAILURE" />
                  <property ResultOption="BT_SUCCESS" />
                </node>
              </node>
            </node>
            <node class="Compute" version="1" id="0">
              <property Operator="Add" />
              <property Opl="int parT_PlayerIndex" />
              <property Opr1="int parT_PlayerIndex" />
              <property Opr2="const int 1" />
            </node>
          </node>
          <node class="Selector" version="1" id="2">
            <node class="Sequence" version="1" id="38">
              <node class="Action" version="1" id="5">
                <property Method="Self.GameLevelCommon::isAllEnemyDeadForever()" />
                <property PreconditionFailResult="BT_FAILURE" />
                <property ResultOption="BT_INVALID" />
              </node>
              <node class="Wait" version="1" id="1">
                <property IgnoreTimeScale="false" />
                <property Time="const int 2000" />
              </node>
              <node class="Action" version="1" id="30">
                <property Method="Self.GameLevelCommon::showCredit()" />
                <property PreconditionFailResult="BT_FAILURE" />
                <property ResultOption="BT_INVALID" />
              </node>
              <node class="Wait" version="1" id="32">
                <property IgnoreTimeScale="false" />
                <property Time="const int 6000" />
              </node>
              <node class="Action" version="1" id="23">
                <property Method="Self.GameLevelCommon::stopGame(true)" />
                <property PreconditionFailResult="BT_FAILURE" />
                <property ResultOption="BT_SUCCESS" />
              </node>
            </node>
            <node class="Sequence" version="1" id="24">
              <node class="Action" version="1" id="22">
                <property Method="Self.GameLevelCommon::isPlayerDeadForever()" />
                <property PreconditionFailResult="BT_FAILURE" />
                <property ResultOption="BT_INVALID" />
              </node>
              <node class="Wait" version="1" id="28">
                <property IgnoreTimeScale="false" />
                <property Time="const int 2000" />
              </node>
              <node class="Action" version="1" id="33">
                <property Method="Self.GameLevelCommon::showCredit()" />
                <property PreconditionFailResult="BT_FAILURE" />
                <property ResultOption="BT_INVALID" />
              </node>
              <node class="Wait" version="1" id="56">
                <property IgnoreTimeScale="false" />
                <property Time="const int 6000" />
              </node>
              <node class="Action" version="1" id="27">
                <property Method="Self.GameLevelCommon::stopGame(false)" />
                <property PreconditionFailResult="BT_FAILURE" />
                <property ResultOption="BT_SUCCESS" />
              </node>
            </node>
          </node>
          <node class="Sequence" version="1" id="34">
            <node class="Wait" version="1" id="31">
              <property IgnoreTimeScale="false" />
              <property Time="const int 8000" />
            </node>
            <node class="Assignment" version="1" id="42">
              <property Opl="int parT_AwardType" />
              <property Opr="Self.GameLevelCommon::randomNumberInt(0,4)" />
            </node>
            <node class="Assignment" version="1" id="43">
              <property Opl="int parT_AwardX" />
              <property Opr="Self.GameLevelCommon::randomNumberInt(5,20)" />
            </node>
            <node class="Assignment" version="1" id="44">
              <property Opl="int parT_AwardY" />
              <property Opr="Self.GameLevelCommon::randomNumberInt(5,20)" />
            </node>
            <node class="Action" version="1" id="45">
              <property Method="Self.GameLevelCommon::spawnAward(int parT_AwardType,int parT_AwardX,int parT_AwardY,20)" />
              <property PreconditionFailResult="BT_FAILURE" />
              <property ResultOption="BT_INVALID" />
            </node>
            <node class="Wait" version="1" id="46">
              <property IgnoreTimeScale="false" />
              <property Time="const int 2000" />
            </node>
          </node>
        </node>
      </node>
    </node>
  </node>
</behavior>