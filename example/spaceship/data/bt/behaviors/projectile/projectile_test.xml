<?xml version="1.0" encoding="utf-8"?>
<Behavior>
  <Node Class="Behaviac.Design.Nodes.Behavior" AgentType="framework::Projectile" Domains="" Enable="true" Id="-1" Version="1">
    <Comment Background="NoColor" Text="" />
    <Parameters>
      <Parameter Name="par_test_a" Type="System.Boolean" DefaultValue="false" Desc="" />
      <Parameter Name="par_test_b" Type="System.Int32" DefaultValue="0" Desc="" />
      <Parameter Name="par_test_c" Type="System.Single" DefaultValue="0" Desc="" />
      <Parameter Name="par_test_d" Type="System.UInt32" DefaultValue="0" Desc="" />
    </Parameters>
    <DescriptorRefs value="0:" />
    <Connector Identifier="GenericChildren">
      <Node Class="PluginBehaviac.Nodes.Selector" Enable="true" Id="1" Version="1">
        <Comment Background="NoColor" Text="" />
        <Connector Identifier="GenericChildren">
          <Node Class="PluginBehaviac.Nodes.WaitforSignal" Enable="true" Id="2" Version="1">
            <Comment Background="NoColor" Text="" />
            <Attachment Class="PluginBehaviac.Events.Predicate" BinaryOperator="And" Id="3" Operator="Greater" Opl="uint framework::GameObject.framework::GameObject::HP" Opr="const uint 50" />
            <Connector Identifier="GenericChildren">
              <Node Class="PluginBehaviac.Nodes.Action" Enable="true" Id="4" Method="Self.framework::GameObject::GoStraight(5)" ResultFunctor="&quot;&quot;" ResultOption="BT_SUCCESS" Version="1">
                <Comment Background="NoColor" Text="" />
              </Node>
            </Connector>
          </Node>
          <Node Class="PluginBehaviac.Nodes.Action" Enable="true" Id="5" Method="Self.framework::GameObject::GoStraight(0)" ResultFunctor="&quot;&quot;" ResultOption="BT_SUCCESS" Version="1">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Query" Descriptors="0:" Domain="attack" Enable="true" Id="6" Version="1">
            <Comment Background="NoColor" Text="" />
            <Attachment Class="PluginBehaviac.Events.Predicate" BinaryOperator="And" Id="7" Operator="Equal" Opl="Self.framework::GameObject::playerIsAligned()" Opr="const bool false" />
            <Attachment Class="PluginBehaviac.Events.Predicate" BinaryOperator="And" Id="8" Operator="Equal" Opl="uint framework::GameObject.framework::GameObject::HP" Opr="const uint 0" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Assignment" Enable="true" Id="9" Opl="bool par_test_a" Opr="const bool true" Version="1">
            <Comment Background="NoColor" Text="" />
          </Node>
          <Node Class="PluginBehaviac.Nodes.Sequence" Enable="true" Id="10" Version="1">
            <Comment Background="NoColor" Text="" />
            <Connector Identifier="GenericChildren">
              <Node Class="PluginBehaviac.Nodes.Condition" Enable="true" Id="11" Operator="Equal" Opl="bool par_test_a" Opr="const bool false" Version="1">
                <Comment Background="NoColor" Text="" />
              </Node>
              <Node Class="PluginBehaviac.Nodes.Condition" Enable="true" Id="12" Operator="Equal" Opl="uint framework::GameObject.framework::GameObject::HP" Opr="const uint 0" Version="1">
                <Comment Background="NoColor" Text="" />
              </Node>
              <Node Class="PluginBehaviac.Nodes.Condition" Enable="true" Id="13" Operator="Equal" Opl="uint framework::WorldState.framework::WorldState::time" Opr="uint par_test_d" Version="1">
                <Comment Background="NoColor" Text="" />
              </Node>
            </Connector>
          </Node>
          <Node Class="PluginBehaviac.Nodes.DecoratorLoop" Count="const int -1" DecorateWhenChildEnds="true" Enable="true" Id="14" Version="1">
            <Comment Background="NoColor" Text="" />
            <Connector Identifier="GenericChildren">
              <Node Class="PluginBehaviac.Nodes.Condition" Enable="true" Id="15" Operator="Equal" Opl="Self.framework::GameObject::alignedWithPlayer()" Opr="const bool false" Version="1">
                <Comment Background="NoColor" Text="" />
              </Node>
            </Connector>
          </Node>
          <Node Class="PluginBehaviac.Nodes.DecoratorCountLimit" Count="int par_test_b" DecorateWhenChildEnds="true" Enable="true" Id="16" Version="1">
            <Comment Background="NoColor" Text="" />
            <Connector Identifier="GenericChildren">
              <Node Class="PluginBehaviac.Nodes.Condition" Enable="true" Id="17" Operator="Equal" Opl="framework::WorldState.framework::WorldState::NextWave()" Opr="const bool true" Version="1">
                <Comment Background="NoColor" Text="" />
              </Node>
            </Connector>
          </Node>
          <Node Class="PluginBehaviac.Nodes.DecoratorLoop" Count="uint framework::WorldState.framework::WorldState::time" DecorateWhenChildEnds="true" Enable="true" Id="18" Version="1">
            <Comment Background="NoColor" Text="" />
            <Connector Identifier="GenericChildren">
              <Node Class="PluginBehaviac.Nodes.Noop" Enable="true" Id="19" Version="1">
                <Comment Background="NoColor" Text="" />
              </Node>
            </Connector>
          </Node>
          <Node Class="PluginBehaviac.Nodes.Sequence" Enable="true" Id="20" Version="1">
            <Comment Background="NoColor" Text="" />
            <Attachment Class="PluginBehaviac.Events.Predicate" BinaryOperator="And" Id="21" Operator="Equal" Opl="Self.framework::GameObject::distanceToPlayer()" Opr="const float 0" />
            <Attachment Class="PluginBehaviac.Events.Predicate" BinaryOperator="And" Id="22" Operator="Equal" Opl="uint framework::GameObject.framework::GameObject::HP" Opr="const uint 0" />
            <Connector Identifier="GenericChildren">
              <Node Class="PluginBehaviac.Nodes.Noop" Enable="true" Id="23" Version="1">
                <Comment Background="NoColor" Text="" />
              </Node>
              <Node Class="PluginBehaviac.Nodes.Noop" Enable="true" Id="24" Version="1">
                <Comment Background="NoColor" Text="" />
              </Node>
            </Connector>
          </Node>
        </Connector>
      </Node>
    </Connector>
  </Node>
</Behavior>